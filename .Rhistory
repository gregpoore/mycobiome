mycobiomeImmuneCellsMergedPT_WGS_HMS <- mycobiomeImmuneCellsMerged[rownames(metaImmunePT_WGS_HMS),]
mycobiomeImmuneCellsMergedPT_RNA_UNC <- mycobiomeImmuneCellsMerged[rownames(metaImmunePT_RNA_UNC),]
#-----------------------Create matching mycobiome data-----------------------#
rep200TaxSplit_Fungi_Paired_to_Weizmann <- read.csv("Supporting_data/rep200TaxSplit_Fungi_Paired_To_Weizmann_Final.csv", stringsAsFactors = FALSE, row.names = 1)
rep200TaxSplit_Fungi_Paired_to_Weizmann_formatted <- rep200TaxSplit_Fungi_Paired_to_Weizmann %>%
rownames_to_column("OGU") %>% column_to_rownames("species")
colnames(rep200FungiSpeciesShared_Nonzero) <- rep200TaxSplit_Fungi_Paired_to_Weizmann_formatted[colnames(rep200FungiSpeciesShared_Nonzero), "OGU"]
setwd("~/Google Drive/AAA_UCSD_Research/AAA_Knight_Lab/AAA_Projects/AAA_Atlas_Cancer_Microbiome/AAA_Code_for_Mycobiome_Analyses")
#----------------------------------------------------------#
# Load environments
#----------------------------------------------------------#
# Load dependencies
require(devtools)
require(doMC)
require(phyloseq)
require(microbiome)
require(vegan)
require(dplyr)
require(tidyr)
require(tibble)
require(reshape2)
require(ggpubr)
require(ggsci)
require(ANCOMBC)
require(biomformat)
require(Rhdf5lib)
numCores <- detectCores()
registerDoMC(cores=numCores)
#----------------------------------------------------------#
# Import data
#----------------------------------------------------------#
# snmDataOGUFungi,
# vdge_dataE,
# rep200Data_WGS_RNA_HiSeq_Fungi_Decontam_Nonzero,
# metaQiitaCombined_Nonzero_SpeciesShared,
load("Interim_data/snmDataFungi_13Sep21.RData")
# save(rep200FungiPhylumShared_Nonzero,
#      metaQiitaCombined_Nonzero_SpeciesShared_PhylumShared,
#      rep200FungiClassShared_Nonzero,
#      metaQiitaCombined_Nonzero_SpeciesShared_ClassShared,
#      rep200FungiOrderShared_Nonzero,
#      metaQiitaCombined_Nonzero_SpeciesShared_OrderShared,
#      rep200FungiFamilyShared_Nonzero,
#      metaQiitaCombined_Nonzero_SpeciesShared_FamilyShared,
#      rep200FungiGenusShared_Nonzero,
#      metaQiitaCombined_Nonzero_SpeciesShared_GenusShared,
#      rep200FungiSpeciesShared_Nonzero,
#      metaQiitaCombined_Nonzero_SpeciesShared_SpeciesShared,
#      file = "Interim_data/tcga_data_taxa_levels_features_shared_with_Weizmann_13Sep21.RData")
load("Interim_data/tcga_data_taxa_levels_features_shared_with_Weizmann_13Sep21.RData")
# metaQiitaCombined_Nonzero_WithBamcounts,
# rep200Data_WGS_RNA_Matched_Bacteria,
# rep200Data_WGS_RNA_Matched_Fungi,
load("Interim_data/metaQiitaCombined_Nonzero_WithBamcounts_and_Data_13Sep21.RData")
#----------------------------------------------------------#
# Load cibersort immune cell data and merge to mycobiome metadata
#----------------------------------------------------------#
# save(gID2TaxAll,
#      rep200Data_WGS_RNA_Matched,
#      metaQiitaWGS_RNA_HiSeq_Filt_Nonzero,
#      file = "data_for_mmvec_tables_7Aug21.RData")
# load("data_for_mmvec_tables_7Aug21.RData")
# Load relative abundance cibersort table from Thorsson et al. 2018 Immunity
# Only TCGA case IDs were provided for the mapping, so those are used here to
# map to TCGA mycobiome data
cibersortTCGA <- read.csv("Supporting_data/thorsson_2018_immunity_tcga_cibersort_edited_14Aug21.csv",
row.names = 1, stringsAsFactors = FALSE)
cibersortTCGAFormatted <- cibersortTCGA %>% rownames_to_column("tcga_case_id")
## Merge by tcga_case_id in metaQiitaCombined_Nonzero_SpeciesShared
head(metaQiitaCombined_Nonzero_SpeciesShared)
# Check for non-unique overlap
sum(metaQiitaCombined_Nonzero_SpeciesShared$tcga_case_id %in% rownames(cibersortTCGA)) # 11720 (NB: is less than 14546 --> missing samples)
sum(rownames(cibersortTCGA) %in% metaQiitaCombined_Nonzero_SpeciesShared$tcga_case_id) # 7143 --> repeats exist
# Create mycobiome-matched cibersort immune cell table via merging
mycobiomeImmuneCells <- metaQiitaCombined_Nonzero_SpeciesShared %>% rownames_to_column("sampleid") %>%
select(sampleid, tcga_case_id) %>% droplevels() %>%
left_join(cibersortTCGAFormatted, by = "tcga_case_id") %>%
drop_na() %>%
select(-tcga_case_id) %>%
column_to_rownames("sampleid") -> mycobiomeImmuneCellsMerged
colnames(mycobiomeImmuneCellsMerged) <- gsub('([[:punct:]])|\\s+','',colnames(mycobiomeImmuneCellsMerged))
dim(mycobiomeImmuneCellsMerged) # 11720    22
sum(is.na(mycobiomeImmuneCellsMerged)) # 0
# Subset metadata
metaImmune <- droplevels(metaQiitaCombined_Nonzero_SpeciesShared[rownames(mycobiomeImmuneCellsMerged),])
metaImmunePT <- metaImmune %>% filter(sample_type == "Primary Tumor") %>% droplevels()
metaImmunePT_WGS <- metaImmunePT %>% filter(experimental_strategy == "WGS") %>% droplevels()
metaImmunePT_RNA <- metaImmunePT %>% filter(experimental_strategy == "RNA-Seq") %>% droplevels()
metaImmunePT_WGS_HMS <- metaImmunePT_WGS %>% filter(data_submitting_center_label == "Harvard Medical School") %>% droplevels()
metaImmunePT_RNA_UNC <- metaImmunePT_RNA %>% filter(data_submitting_center_label == "University of North Carolina") %>% droplevels()
# Subset immune cell data
mycobiomeImmuneCellsMergedPT <- mycobiomeImmuneCellsMerged[rownames(metaImmunePT),]
mycobiomeImmuneCellsMergedPT_WGS <- mycobiomeImmuneCellsMerged[rownames(metaImmunePT_WGS),]
mycobiomeImmuneCellsMergedPT_RNA <- mycobiomeImmuneCellsMerged[rownames(metaImmunePT_RNA),]
mycobiomeImmuneCellsMergedPT_WGS_HMS <- mycobiomeImmuneCellsMerged[rownames(metaImmunePT_WGS_HMS),]
mycobiomeImmuneCellsMergedPT_RNA_UNC <- mycobiomeImmuneCellsMerged[rownames(metaImmunePT_RNA_UNC),]
#-----------------------Create matching mycobiome data-----------------------#
rep200TaxSplit_Fungi_Paired_to_Weizmann <- read.csv("Supporting_data/rep200TaxSplit_Fungi_Paired_To_Weizmann_Final.csv", stringsAsFactors = FALSE, row.names = 1)
rep200TaxSplit_Fungi_Paired_to_Weizmann_formatted <- rep200TaxSplit_Fungi_Paired_to_Weizmann %>%
rownames_to_column("OGU") %>% column_to_rownames("species")
colnames(rep200FungiSpeciesShared_Nonzero) <- rep200TaxSplit_Fungi_Paired_to_Weizmann_formatted[colnames(rep200FungiSpeciesShared_Nonzero), "OGU"]
rep200Data_Matched2ImmunePT_Bacteria <- rep200Data_WGS_RNA_Matched_Bacteria[rownames(metaImmunePT),]
dim(rep200Data_Matched2ImmunePT_Bacteria) # 9157 11071
rep200Data_Matched2ImmunePT_Fungi <- rep200FungiSpeciesShared_Nonzero[rownames(metaImmunePT),]
dim(rep200Data_Matched2ImmunePT_Fungi) # 9157   34
dim(rep200FungiGenusShared_Nonzero)
rep200FungiGenusShared_Nonzero[1:3,1:3]
dim(rep200FungiSpeciesShared_Nonzero)
rep200Data_Matched2ImmunePT_Fungi_genus <- rep200FungiGenusShared_Nonzero[rownames(metaImmunePT),]
dim(rep200Data_Matched2ImmunePT_Fungi_genus) # 9157   34
all(rownames(rep200Data_Matched2ImmunePT_Bacteria) == rownames(rep200Data_Matched2ImmunePT_Fungi_genus)) # TRUE
rep200Data_Matched2ImmunePT_Bacteria <- rep200Data_WGS_RNA_Matched_Bacteria[rownames(metaImmunePT),]
dim(rep200Data_Matched2ImmunePT_Bacteria) # 9157 11071
rep200Data_Matched2ImmunePT_Fungi_species <- rep200FungiSpeciesShared_Nonzero[rownames(metaImmunePT),]
dim(rep200Data_Matched2ImmunePT_Fungi_species) # 9157   34
rep200Data_Matched2ImmunePT_Fungi_genus <- rep200FungiGenusShared_Nonzero[rownames(metaImmunePT),]
dim(rep200Data_Matched2ImmunePT_Fungi_genus) # 9157   54
# Sanity check
all(rownames(metaImmunePT) == rownames(rep200Data_Matched2ImmunePT_Fungi_species)) # TRUE
all(rownames(rep200Data_Matched2ImmunePT_Bacteria) == rownames(rep200Data_Matched2ImmunePT_Fungi_species)) # TRUE
all(rownames(rep200Data_Matched2ImmunePT_Bacteria) == rownames(rep200Data_Matched2ImmunePT_Fungi_genus)) # TRUE
tail(rownames(rep200FungiGenusShared_Nonzero))
head(rownames(rep200FungiGenusShared_Nonzero))
sum(is.na(rownames(rep200FungiGenusShared_Nonzero)))
sum(is.na(rownames(rep200FungiSpeciesShared_Nonzero)))
head(rownames(rep200FungiGenusShared_Nonzero))
head(rownames(rep200FungiSpeciesShared_Nonzero))
all(rownames(rep200Data_Matched2ImmunePT_Fungi_species) == rownames(rep200Data_Matched2ImmunePT_Fungi_genus)) # TRUE
tail(rownames(rep200FungiSpeciesShared_Nonzero))
tail(rownames(rep200FungiGenusShared_Nonzero))
dim(rep200FungiGenusShared_Nonzero)
dim(rep200FungiSpeciesShared_Nonzero)
rep200Data_Matched2ImmunePT_Fungi_genus <- rep200FungiGenusShared_Nonzero[rownames(metaImmunePT),]
dim(rep200Data_Matched2ImmunePT_Fungi_genus) # 9157   54
rep200Data_Matched2ImmunePT_Fungi_species <- rep200FungiSpeciesShared_Nonzero[rownames(metaImmunePT),]
dim(rep200Data_Matched2ImmunePT_Fungi_species) # 9157   34
rep200Data_Matched2ImmunePT_Fungi_genus <- rep200FungiGenusShared_Nonzero[rownames(metaImmunePT),]
dim(rep200Data_Matched2ImmunePT_Fungi_genus) # 9157   54
# Sanity check
all(rownames(metaImmunePT) == rownames(rep200Data_Matched2ImmunePT_Fungi_species)) # TRUE
all(rownames(rep200Data_Matched2ImmunePT_Bacteria) == rownames(rep200Data_Matched2ImmunePT_Fungi_species)) # TRUE
all(rownames(rep200Data_Matched2ImmunePT_Fungi_species) == rownames(rep200Data_Matched2ImmunePT_Fungi_genus)) # TRUE
which(!(rownames(rep200Data_Matched2ImmunePT_Fungi_genus) %in% rownames(metaImmunePT)))
rownames(rep200Data_Matched2ImmunePT_Fungi_genus)[2914]
rownames(rep200Data_Matched2ImmunePT_Fungi_genus)[2913:2915]
which(!(rownames(rep200FungiGenusShared_Nonzero) %in% rownames(metaImmunePT)))
which(!(rownames(metaImmunePT) %in% rownames(rep200Data_Matched2ImmunePT_Fungi_genus)))
rownames(metaImmunePT)[2913:2915]
grep("13767.58cfa833e4b0c9d6adf6dc00", rownames(rep200FungiSpeciesShared_Nonzero))
grep("13767.58cfa833e4b0c9d6adf6dc00", rownames(rep200FungiGenusShared_Nonzero))
grep("13767.58cfa833e4b0c9d6adf6dc00", rownames(rep200FungiFamilyShared_Nonzero))
grep("13767.58cfa833e4b0c9d6adf6dc00", rownames(rep200FungiOrderShared_Nonzero))
grep("13767.58cfa833e4b0c9d6adf6dc00", rownames(rep200FungiClassShared_Nonzero))
grep("13767.58cfa833e4b0c9d6adf6dc00", rownames(rep200FungiPhylumShared_Nonzero))
grep("13767.58cfa833e4b0c9d6adf6dc00", rownames(rep200FungiGenusShared_Nonzero))
#----------------------------------------------------------#
# Load environments
#----------------------------------------------------------#
require(doMC)
require(plyr)
require(dplyr)
require(phyloseq)
require(microbiome)
require(vegan)
require(tibble)
require(biomformat)
require(rhdf5)
require(ggpubr)
require(ggsci)
require(scales)
numCores <- detectCores()
registerDoMC(cores=numCores)
#----------------------------------------------------------#
# Import data
#----------------------------------------------------------#
# NOTE: "fungal_norm_unique_hit.rds" contains a list with 7 phyloseq objects
# containing fungal data summarized at all_rank, phylum, class, order, family,
# genus, and species levels
wzRDS <- readRDS("Input_data/Weizmann_data/fungal_norm_unique_hit.rds")
pzWz_allRank <- wzRDS$all_rank
psWz_phylum <- wzRDS$phylum_phy
psWz_class <- wzRDS$class_phy
psWz_order <- wzRDS$order_phy
psWz_family <- wzRDS$family_phy
psWz_genus <- wzRDS$genus_phy
psWz_species <- wzRDS$species_phy
# Subset to non-control samples to compare overlap
pzWz_allRank_Bio <- subset_samples(pzWz_allRank, type.detail %in% c("normal", "nat", "tumor"))
psWz_phylum_Bio <- subset_samples(psWz_phylum, type.detail %in% c("normal", "nat", "tumor"))
psWz_class_Bio <- subset_samples(psWz_class, type.detail %in% c("normal", "nat", "tumor"))
psWz_order_Bio <- subset_samples(psWz_order, type.detail %in% c("normal", "nat", "tumor"))
psWz_family_Bio <- subset_samples(psWz_family, type.detail %in% c("normal", "nat", "tumor"))
psWz_genus_Bio <- subset_samples(psWz_genus, type.detail %in% c("normal", "nat", "tumor"))
psWz_species_Bio <- subset_samples(psWz_species, type.detail %in% c("normal", "nat", "tumor"))
## Load TCGA data
# metaQiitaCombined_Nonzero_WithBamcounts,
# rep200Data_WGS_RNA_Matched_Bacteria,
# rep200Data_WGS_RNA_Matched_Fungi,
load("Interim_data/metaQiitaCombined_Nonzero_WithBamcounts_and_Data_13Sep21.RData") # To load the metadata and raw data objects
# Load the revised taxa mapping file. The following changes were made to compare to the Weizmann taxa mapping:
# - Names for taxa levels were edited (e.g. "Domain" --> "kingdom") and lowercased
# - Empty entries (e.g. "c__") were replaced with "other" (e.g. "other")
# - Entries with brackets (e.g. "[Candida] ...") had their brackets removed (e.g. "Candida ...")
# - The preceding taxa level symbol and double underscore (e.g. "c__XXX" for class) were removed (e.g. "XXX")
# - The entries under "kingdom" were changed from "Eukaryota" to "Fungi"
# - All spaces were converted to underscores
rep200TaxSplit_Fungi_Paired_to_Weizmann <- read.csv("Supporting_data/rep200TaxSplit_Fungi_Paired_To_Weizmann_Final.csv", stringsAsFactors = FALSE, row.names = 1)
#----------------------------------------------------------#
# Create TCGA phyloseq object and aggregate counts at various taxa levels
#----------------------------------------------------------#
psFungiHiSeqFungi_Paired2Wz <- phyloseq(otu_table(rep200Data_WGS_RNA_Matched_Fungi, taxa_are_rows = FALSE),
tax_table(as.matrix(rep200TaxSplit_Fungi_Paired_to_Weizmann)), sample_data(metaQiitaCombined_Nonzero_WithBamcounts))
## Aggregate counts for TCGA data
psFungiHiSeqFungi_Paired2Wz_phylum = aggregate_taxa(psFungiHiSeqFungi_Paired2Wz, "phylum")
psFungiHiSeqFungi_Paired2Wz_class = aggregate_taxa(psFungiHiSeqFungi_Paired2Wz, "class")
psFungiHiSeqFungi_Paired2Wz_order = aggregate_taxa(psFungiHiSeqFungi_Paired2Wz, "order")
psFungiHiSeqFungi_Paired2Wz_family = aggregate_taxa(psFungiHiSeqFungi_Paired2Wz, "family")
psFungiHiSeqFungi_Paired2Wz_genus = aggregate_taxa(psFungiHiSeqFungi_Paired2Wz, "genus")
psFungiHiSeqFungi_Paired2Wz_species = rep200Data_WGS_RNA_Matched_Fungi
colnames(psFungiHiSeqFungi_Paired2Wz_species) <- rep200TaxSplit_Fungi_Paired_to_Weizmann[colnames(psFungiHiSeqFungi_Paired2Wz_species),"species"]
psFungiHiSeqFungi_Paired2Wz_species[1:3,1:3]
sharedPhylum <- findSharedTaxa(psFungiHiSeqFungi_Paired2Wz_phylum, psWz_phylum_Bio, "phylum")
sharedClass <- findSharedTaxa(psFungiHiSeqFungi_Paired2Wz_class, psWz_class_Bio, "class")
sharedOrder <- findSharedTaxa(psFungiHiSeqFungi_Paired2Wz_order, psWz_order_Bio, "order")
sharedFamily <- findSharedTaxa(psFungiHiSeqFungi_Paired2Wz_family, psWz_family_Bio, "family")
sharedGenus <- findSharedTaxa(psFungiHiSeqFungi_Paired2Wz_genus, psWz_genus_Bio, "genus")
sharedSpecies <- findSharedTaxa(psFungiHiSeqFungi_Paired2Wz_species, psWz_species_Bio, "species")
#----------------------------------------------------------#
# Subset TCGA and Weizmann data by intersecting features at varying taxa levels
#----------------------------------------------------------#
## Subset TCGA data
psFungiHiSeqFungi_Paired2Wz_phylum_shared <- subset_taxa(psFungiHiSeqFungi_Paired2Wz_phylum, phylum %in% sharedPhylum)
psFungiHiSeqFungi_Paired2Wz_class_shared <- subset_taxa(psFungiHiSeqFungi_Paired2Wz_class, class %in% sharedClass)
psFungiHiSeqFungi_Paired2Wz_order_shared <- subset_taxa(psFungiHiSeqFungi_Paired2Wz_order, order %in% sharedOrder)
psFungiHiSeqFungi_Paired2Wz_family_shared <- subset_taxa(psFungiHiSeqFungi_Paired2Wz_family, family %in% sharedFamily)
psFungiHiSeqFungi_Paired2Wz_genus_shared <- subset_taxa(psFungiHiSeqFungi_Paired2Wz_genus, genus %in% sharedGenus)
psFungiHiSeqFungi_Paired2Wz_species_shared <- psFungiHiSeqFungi_Paired2Wz_species[,colnames(psFungiHiSeqFungi_Paired2Wz_species) %in% sharedSpecies]
## Extract TCGA count tables with shared features
metaQiitaCombined_Nonzero_shared <- metaQiitaCombined_Nonzero_WithBamcounts
rep200FungiPhylumShared <- data.frame(t(otu_table(psFungiHiSeqFungi_Paired2Wz_phylum_shared)))
rep200FungiClassShared <- data.frame(t(otu_table(psFungiHiSeqFungi_Paired2Wz_class_shared)))
rep200FungiOrderShared <- data.frame(t(otu_table(psFungiHiSeqFungi_Paired2Wz_order_shared)))
rep200FungiFamilyShared <- data.frame(t(otu_table(psFungiHiSeqFungi_Paired2Wz_family_shared)))
rep200FungiGenusShared <- data.frame(t(otu_table(psFungiHiSeqFungi_Paired2Wz_genus_shared)))
rep200FungiSpeciesShared <- psFungiHiSeqFungi_Paired2Wz_species_shared
rep200FungiSpeciesShared[1:3,1:3]
## After subsetting features, remove samples with 0 counts. Note that the metadata will have to be subsetted as well
# Phylum
rep200FungiPhylumShared_Nonzero <- rep200FungiPhylumShared[rowSums(rep200FungiPhylumShared) != 0,]
metaQiitaCombined_Nonzero_PhylumShared <- droplevels(metaQiitaCombined_Nonzero_WithBamcounts[rowSums(rep200FungiPhylumShared) != 0,])
# Class
rep200FungiClassShared_Nonzero <- rep200FungiClassShared[rowSums(rep200FungiClassShared) != 0,]
metaQiitaCombined_Nonzero_ClassShared <- droplevels(metaQiitaCombined_Nonzero_WithBamcounts[rowSums(rep200FungiClassShared) != 0,])
# Order
rep200FungiOrderShared_Nonzero <- rep200FungiOrderShared[rowSums(rep200FungiOrderShared) != 0,]
metaQiitaCombined_Nonzero_OrderShared <- droplevels(metaQiitaCombined_Nonzero_WithBamcounts[rowSums(rep200FungiOrderShared) != 0,])
# Family
rep200FungiFamilyShared_Nonzero <- rep200FungiFamilyShared[rowSums(rep200FungiFamilyShared) != 0,]
metaQiitaCombined_Nonzero_FamilyShared <- droplevels(metaQiitaCombined_Nonzero_WithBamcounts[rowSums(rep200FungiFamilyShared) != 0,])
# Genus
rep200FungiGenusShared_Nonzero <- rep200FungiGenusShared[rowSums(rep200FungiGenusShared) != 0,]
metaQiitaCombined_Nonzero_GenusShared <- droplevels(metaQiitaCombined_Nonzero_WithBamcounts[rowSums(rep200FungiGenusShared) != 0,])
# Species
rep200FungiSpeciesShared_Nonzero <- rep200FungiSpeciesShared[rowSums(rep200FungiSpeciesShared) != 0,]
metaQiitaCombined_Nonzero_SpeciesShared <- droplevels(metaQiitaCombined_Nonzero_WithBamcounts[rowSums(rep200FungiSpeciesShared) != 0,])
##
grep("13767.58cfa833e4b0c9d6adf6dc00", rownames(rep200FungiSpeciesShared_Nonzero))
##
grep("13767.58cfa833e4b0c9d6adf6dc00", rownames(rep200FungiGenusShared))
##
grep("13767.58cfa833e4b0c9d6adf6dc00", rownames(rep200FungiGenusShared_Nonzero))
rep200FungiGenusShared["13767.58cfa833e4b0c9d6adf6dc00",]
##
grep("13767.58cfa833e4b0c9d6adf6dc00", rownames(rep200FungiSpeciesShared_Nonzero))
rep200FungiSpeciesShared_Nonzero["13767.58cfa833e4b0c9d6adf6dc00",]
sharedGenus
sort(sharedGenus)
sharedSpecies
sort(sharedSpecies)
psWz_genus_Bio
tmp <- data.frame(otu_table(psWz_genus_Bio))
tmp <- data.frame(tax_table(psWz_genus_Bio))
head(tmp)
sort(tmp$genus)
tmp <- data.frame(tax_table(psWz_species_Bio))
sort(tmp$genus)
sharedSpecies
sort(sharedGenus)
# There's one sample that is not shared between the metaImmunePT and rep200FungiGenusShared_Nonzero,
# so they need to be subsetted
genusSamplesPT <- intersection(rownames(metaImmunePT), rownames(rep200FungiGenusShared_Nonzero))
# There's one sample that is not shared between the metaImmunePT and rep200FungiGenusShared_Nonzero,
# so they need to be subsetted
genusSamplesPT <- intersect(rownames(metaImmunePT), rownames(rep200FungiGenusShared_Nonzero))
# There's one sample that is not shared between the metaImmunePT and rep200FungiGenusShared_Nonzero,
# so they need to be subsetted
genusSamplesPT <- intersect(rownames(metaImmunePT), rownames(rep200FungiGenusShared_Nonzero))
metaImmunePT_genus <- rownames(metaImmunePT[genusSamplesPT,])
rep200Data_Matched2ImmunePT_Fungi_genus <- rep200FungiGenusShared_Nonzero[rownames(genusSamplesPT),]
dim(rep200Data_Matched2ImmunePT_Fungi_genus) # 9157   54
head(genusSamplesPT)
# There's one sample that is not shared between the metaImmunePT and rep200FungiGenusShared_Nonzero,
# so they need to be subsetted
genusSamplesPT <- intersect(rownames(metaImmunePT), rownames(rep200FungiGenusShared_Nonzero))
metaImmunePT_genus <- rownames(metaImmunePT[genusSamplesPT,])
rep200Data_Matched2ImmunePT_Fungi_genus <- rep200FungiGenusShared_Nonzero[genusSamplesPT,]
dim(rep200Data_Matched2ImmunePT_Fungi_genus) # 9157   54
rep200Data_Matched2ImmunePT_Bacteria <- rep200Data_WGS_RNA_Matched_Bacteria[rownames(metaImmunePT),]
dim(rep200Data_Matched2ImmunePT_Bacteria) # 9157 11071
rep200Data_Matched2ImmunePT_Fungi_species <- rep200FungiSpeciesShared_Nonzero[rownames(metaImmunePT),]
dim(rep200Data_Matched2ImmunePT_Fungi_species) # 9157   34
# Sanity check
all(rownames(metaImmunePT) == rownames(rep200Data_Matched2ImmunePT_Fungi_species)) # TRUE
all(rownames(rep200Data_Matched2ImmunePT_Bacteria) == rownames(rep200Data_Matched2ImmunePT_Fungi_species)) # TRUE
#-----------------------Write biom tables and metadata files-----------------------#
# Write metadata to text file
metaImmunePT %>% rownames_to_column("sampleid") %>%
write.table(file = "MMvec_analysis/species_intersected_with_WIS/metadata_immune_all_primary_tumors.txt",
quote = FALSE, sep = "\t",row.names = FALSE, col.names = TRUE)
# Save biom files of full data
rep200Data_Matched2ImmunePT_Bacteria_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Bacteria))
write_biom(rep200Data_Matched2ImmunePT_Bacteria_BIOM, biom_file = "MMvec_analysis/species_intersected_with_WIS/immune_rep200_counts_bacteria_all_primary_tumors.biom")
rep200Data_Matched2ImmunePT_Fungi_species_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Fungi_species))
write_biom(rep200Data_Matched2ImmunePT_Fungi_species_BIOM, biom_file = "MMvec_analysis/species_intersected_with_WIS/immune_rep200_counts_fungi_all_primary_tumors.biom")
mycobiomeImmuneCellsMergedPT_BIOM <- make_biom(t(mycobiomeImmuneCellsMergedPT))
write_biom(mycobiomeImmuneCellsMergedPT_BIOM, biom_file = "MMvec_analysis/species_intersected_with_WIS/immune_cibersort_rel_abund_all_TCGA_primary_tumors.biom")
## Subset to HMS
rep200Data_Matched2ImmunePT_Bacteria_HMS_PT <- rep200Data_Matched2ImmunePT_Bacteria[rownames(metaImmunePT_WGS_HMS),]
rep200Data_Matched2ImmunePT_Fungi_species_HMS_PT <- rep200Data_Matched2ImmunePT_Fungi_species[rownames(metaImmunePT_WGS_HMS),]
metaImmunePT_WGS_HMS %>% rownames_to_column("sampleid") %>%
write.table(file = "MMvec_analysis/species_intersected_with_WIS/metadata_immune_WGS_Harvard_Primary_Tumor.txt",
quote = FALSE, sep = "\t",row.names = FALSE, col.names = TRUE)
# Save biom files of full data
rep200Data_Matched2ImmunePT_Bacteria_HMS_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Bacteria_HMS_PT))
write_biom(rep200Data_Matched2ImmunePT_Bacteria_HMS_PT_BIOM, biom_file = "MMvec_analysis/species_intersected_with_WIS/immune_rep200_counts_bacteria_TCGA_Harvard_WGS_Primary_Tumor.biom")
rep200Data_Matched2ImmunePT_Fungi_species_HMS_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Fungi_species_HMS_PT))
write_biom(rep200Data_Matched2ImmunePT_Fungi_species_HMS_PT_BIOM, biom_file = "MMvec_analysis/species_intersected_with_WIS/immune_rep200_counts_fungi_TCGA_Harvard_WGS_Primary_Tumor.biom")
mycobiomeImmuneCellsMergedPT_WGS_HMS_BIOM <- make_biom(t(mycobiomeImmuneCellsMergedPT_WGS_HMS))
write_biom(mycobiomeImmuneCellsMergedPT_WGS_HMS_BIOM, biom_file = "MMvec_analysis/species_intersected_with_WIS/immune_cibersort_rel_abund_TCGA_Harvard_WGS_Primary_Tumor.biom")
## Subset to UNC
rep200Data_Matched2ImmunePT_Bacteria_UNC_PT <- rep200Data_Matched2ImmunePT_Bacteria[rownames(metaImmunePT_RNA_UNC),]
rep200Data_Matched2ImmunePT_Fungi_species_UNC_PT <- rep200Data_Matched2ImmunePT_Fungi_species[rownames(metaImmunePT_RNA_UNC),]
metaImmunePT_RNA_UNC %>% rownames_to_column("sampleid") %>%
write.table(file = "MMvec_analysis/species_intersected_with_WIS/metadata_immune_RNA_UNC_Primary_Tumor.txt",
quote = FALSE, sep = "\t",row.names = FALSE, col.names = TRUE)
# Save biom files of full data
rep200Data_Matched2ImmunePT_Bacteria_UNC_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Bacteria_UNC_PT))
write_biom(rep200Data_Matched2ImmunePT_Bacteria_UNC_PT_BIOM, biom_file = "MMvec_analysis/species_intersected_with_WIS/immune_rep200_counts_bacteria_TCGA_UNC_RNA_Primary_Tumor.biom")
rep200Data_Matched2ImmunePT_Fungi_species_UNC_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Fungi_species_UNC_PT))
write_biom(rep200Data_Matched2ImmunePT_Fungi_species_UNC_PT_BIOM, biom_file = "MMvec_analysis/species_intersected_with_WIS/immune_rep200_counts_fungi_TCGA_UNC_RNA_Primary_Tumor.biom")
mycobiomeImmuneCellsMergedPT_RNA_UNC_BIOM <- make_biom(t(mycobiomeImmuneCellsMergedPT_RNA_UNC))
write_biom(mycobiomeImmuneCellsMergedPT_RNA_UNC_BIOM, biom_file = "MMvec_analysis/species_intersected_with_WIS/immune_cibersort_rel_abund_TCGA_UNC_RNA_Primary_Tumor.biom")
## Subset to all WGS
rep200Data_Matched2ImmunePT_Bacteria_WGS_PT <- rep200Data_Matched2ImmunePT_Bacteria[rownames(metaImmunePT_WGS),]
rep200Data_Matched2ImmunePT_Fungi_species_WGS_PT <- rep200Data_Matched2ImmunePT_Fungi_species[rownames(metaImmunePT_WGS),]
metaImmunePT_WGS %>% rownames_to_column("sampleid") %>%
write.table(file = "MMvec_analysis/species_intersected_with_WIS/metadata_immune_WGS_AllSeqCenters_Primary_Tumor.txt",
quote = FALSE, sep = "\t",row.names = FALSE, col.names = TRUE)
# Save biom files of full data
rep200Data_Matched2ImmunePT_Bacteria_WGS_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Bacteria_WGS_PT))
write_biom(rep200Data_Matched2ImmunePT_Bacteria_WGS_PT_BIOM, biom_file = "MMvec_analysis/species_intersected_with_WIS/immune_rep200_counts_bacteria_TCGA_AllSeqCenters_WGS_Primary_Tumor.biom")
rep200Data_Matched2ImmunePT_Fungi_species_WGS_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Fungi_species_WGS_PT))
write_biom(rep200Data_Matched2ImmunePT_Fungi_species_WGS_PT_BIOM, biom_file = "MMvec_analysis/species_intersected_with_WIS/immune_rep200_counts_fungi_TCGA_AllSeqCenters_WGS_Primary_Tumor.biom")
mycobiomeImmuneCellsMergedPT_WGS_BIOM <- make_biom(t(mycobiomeImmuneCellsMergedPT_WGS))
write_biom(mycobiomeImmuneCellsMergedPT_WGS_BIOM, biom_file = "MMvec_analysis/species_intersected_with_WIS/immune_cibersort_rel_abund_TCGA_AllSeqCenters_WGS_Primary_Tumor.biom")
rep200TaxSplit <- read.csv("Supporting_data/rep200_lineage_map_split.csv", stringsAsFactors = FALSE, row.names = 1)
rep200Kingdoms <- read.csv("Supporting_data/rep200_gOTU_kingdom_mapping.csv", stringsAsFactors = FALSE)
rep200Kingdoms_Fungi <- rep200Kingdoms[which(rep200Kingdoms$kingdom == "fungi"),]
rep200Kingdoms_Bacteria <- rep200Kingdoms[which(rep200Kingdoms$kingdom == "bacteria"),]
rep200TaxSplit_Bacteria <- rep200TaxSplit[rownames(rep200TaxSplit) %in% rep200Kingdoms_Bacteria$genomeID,,drop=FALSE]
dim(rep200TaxSplit_Bacteria) # 11080     7
## Subset
genusSamplesPT <- intersect(rownames(metaImmunePT), rownames(rep200FungiGenusShared_Nonzero))
metaImmunePT_genus <- rownames(metaImmunePT[genusSamplesPT,])
rep200Data_Matched2ImmunePT_Fungi_genus <- rep200FungiGenusShared_Nonzero[genusSamplesPT,]
rep200Data_Matched2ImmunePT_Bacteria_genus <- rep200Data_WGS_RNA_Matched_Bacteria[genusSamplesPT,]
dim(rep200Data_Matched2ImmunePT_Fungi_genus) # 9156   54
dim(rep200Data_Matched2ImmunePT_Bacteria) # 9157 11071
dim(rep200Data_Matched2ImmunePT_Bacteria_genus) # 9157 11071
# Build phyloseq object
ps_rep200Data_Matched2ImmunePT_Bacteria_genus <- phyloseq(otu_table(rep200Data_Matched2ImmunePT_Bacteria_genus, taxa_are_rows = FALSE),
tax_table(as.matrix(rep200TaxSplit_Bacteria)),
sample_data(metaImmunePT_genus))
metaImmunePT_genus <- droplevels(metaImmunePT[genusSamplesPT,])
rep200Data_Matched2ImmunePT_Bacteria_Filt <- rep200Data_WGS_RNA_Matched_Bacteria[genusSamplesPT,]
dim(rep200Data_Matched2ImmunePT_Fungi_genus) # 9156   54
dim(rep200Data_Matched2ImmunePT_Bacteria_Filt) # 9156 11071
## Subset
genusSamplesPT <- intersect(rownames(metaImmunePT), rownames(rep200FungiGenusShared_Nonzero))
metaImmunePT_genus <- droplevels(metaImmunePT[genusSamplesPT,])
rep200Data_Matched2ImmunePT_Fungi_genus <- rep200FungiGenusShared_Nonzero[genusSamplesPT,]
rep200Data_Matched2ImmunePT_Bacteria_Filt <- rep200Data_WGS_RNA_Matched_Bacteria[genusSamplesPT,]
dim(rep200Data_Matched2ImmunePT_Fungi_genus) # 9156   54
dim(rep200Data_Matched2ImmunePT_Bacteria_Filt) # 9156 11071
# Build phyloseq object
ps_rep200Data_Matched2ImmunePT_Bacteria_Filt <- phyloseq(otu_table(rep200Data_Matched2ImmunePT_Bacteria_Filt, taxa_are_rows = FALSE),
tax_table(as.matrix(rep200TaxSplit_Bacteria)),
sample_data(metaImmunePT_genus))
## Aggregate counts
ps_rep200Data_Matched2ImmunePT_Bacteria_Filt_phylum = aggregate_taxa(ps_rep200Data_Matched2ImmunePT_Bacteria_Filt, "phylum")
ps_rep200Data_Matched2ImmunePT_Bacteria_Filt_class = aggregate_taxa(ps_rep200Data_Matched2ImmunePT_Bacteria_Filt, "class")
ps_rep200Data_Matched2ImmunePT_Bacteria_Filt_order = aggregate_taxa(ps_rep200Data_Matched2ImmunePT_Bacteria_Filt, "order")
ps_rep200Data_Matched2ImmunePT_Bacteria_Filt_genus = aggregate_taxa(ps_rep200Data_Matched2ImmunePT_Bacteria_Filt, "Genus")
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus <- data.frame(t(otu_table(ps_rep200Data_Matched2ImmunePT_Bacteria_Filt_genus)))
dim(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus)
dim(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus)
# Write metadata to text file
metaImmunePT_genus %>% rownames_to_column("sampleid") %>%
write.table(file = "MMvec_analysis/genus_intersected_with_WIS/metadata_immune_all_primary_tumors.txt",
quote = FALSE, sep = "\t",row.names = FALSE, col.names = TRUE)
# Save biom files of full data
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus))
write_biom(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_bacteria_all_primary_tumors.biom")
rep200Data_Matched2ImmunePT_Fungi_genus_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Fungi_genus))
write_biom(rep200Data_Matched2ImmunePT_Fungi_genus_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_fungi_all_primary_tumors.biom")
mycobiomeImmuneCellsMergedPT_BIOM <- make_biom(t(mycobiomeImmuneCellsMergedPT))
write_biom(mycobiomeImmuneCellsMergedPT_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_cibersort_rel_abund_all_TCGA_primary_tumors.biom")
## Subset to HMS
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_HMS_PT <- rep200Data_Matched2ImmunePT_Bacteria_Filt_genus[rownames(metaImmunePT_genus_WGS_HMS),]
rep200Data_Matched2ImmunePT_Fungi_genus_HMS_PT <- rep200Data_Matched2ImmunePT_Fungi_genus[rownames(metaImmunePT_genus_WGS_HMS),]
metaImmunePT_genus_WGS_HMS %>% rownames_to_column("sampleid") %>%
write.table(file = "MMvec_analysis/genus_intersected_with_WIS/metadata_immune_WGS_Harvard_Primary_Tumor.txt",
quote = FALSE, sep = "\t",row.names = FALSE, col.names = TRUE)
# Save biom files of full data
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_HMS_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_HMS_PT))
write_biom(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_HMS_PT_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_bacteria_TCGA_Harvard_WGS_Primary_Tumor.biom")
rep200Data_Matched2ImmunePT_Fungi_genus_HMS_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Fungi_genus_HMS_PT))
write_biom(rep200Data_Matched2ImmunePT_Fungi_genus_HMS_PT_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_fungi_TCGA_Harvard_WGS_Primary_Tumor.biom")
mycobiomeImmuneCellsMergedPT_WGS_HMS_BIOM <- make_biom(t(mycobiomeImmuneCellsMergedPT_WGS_HMS))
write_biom(mycobiomeImmuneCellsMergedPT_WGS_HMS_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_cibersort_rel_abund_TCGA_Harvard_WGS_Primary_Tumor.biom")
## Subset to UNC
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_UNC_PT <- rep200Data_Matched2ImmunePT_Bacteria_Filt_genus[rownames(metaImmunePT_genus_RNA_UNC),]
rep200Data_Matched2ImmunePT_Fungi_genus_UNC_PT <- rep200Data_Matched2ImmunePT_Fungi_genus[rownames(metaImmunePT_genus_RNA_UNC),]
metaImmunePT_genus_RNA_UNC %>% rownames_to_column("sampleid") %>%
write.table(file = "MMvec_analysis/genus_intersected_with_WIS/metadata_immune_RNA_UNC_Primary_Tumor.txt",
quote = FALSE, sep = "\t",row.names = FALSE, col.names = TRUE)
# Save biom files of full data
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_UNC_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_UNC_PT))
write_biom(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_UNC_PT_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_bacteria_TCGA_UNC_RNA_Primary_Tumor.biom")
rep200Data_Matched2ImmunePT_Fungi_genus_UNC_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Fungi_genus_UNC_PT))
write_biom(rep200Data_Matched2ImmunePT_Fungi_genus_UNC_PT_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_fungi_TCGA_UNC_RNA_Primary_Tumor.biom")
mycobiomeImmuneCellsMergedPT_RNA_UNC_BIOM <- make_biom(t(mycobiomeImmuneCellsMergedPT_RNA_UNC))
write_biom(mycobiomeImmuneCellsMergedPT_RNA_UNC_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_cibersort_rel_abund_TCGA_UNC_RNA_Primary_Tumor.biom")
## Subset to all WGS
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_WGS_PT <- rep200Data_Matched2ImmunePT_Bacteria_Filt_genus[rownames(metaImmunePT_genus_WGS),]
rep200Data_Matched2ImmunePT_Fungi_genus_WGS_PT <- rep200Data_Matched2ImmunePT_Fungi_genus[rownames(metaImmunePT_genus_WGS),]
metaImmunePT_genus_WGS %>% rownames_to_column("sampleid") %>%
write.table(file = "MMvec_analysis/genus_intersected_with_WIS/metadata_immune_WGS_AllSeqCenters_Primary_Tumor.txt",
quote = FALSE, sep = "\t",row.names = FALSE, col.names = TRUE)
# Save biom files of full data
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_WGS_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_WGS_PT))
write_biom(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_WGS_PT_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_bacteria_TCGA_AllSeqCenters_WGS_Primary_Tumor.biom")
rep200Data_Matched2ImmunePT_Fungi_genus_WGS_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Fungi_genus_WGS_PT))
write_biom(rep200Data_Matched2ImmunePT_Fungi_genus_WGS_PT_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_fungi_TCGA_AllSeqCenters_WGS_Primary_Tumor.biom")
mycobiomeImmuneCellsMergedPT_WGS_BIOM <- make_biom(t(mycobiomeImmuneCellsMergedPT_WGS))
write_biom(mycobiomeImmuneCellsMergedPT_WGS_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_cibersort_rel_abund_TCGA_AllSeqCenters_WGS_Primary_Tumor.biom")
#-----------------------Write biom tables and metadata files-----------------------#
metaImmunePT_genus_WGS <- metaImmunePT_genus %>% filter(experimental_strategy == "WGS") %>% droplevels()
metaImmunePT_genus_RNA <- metaImmunePT_genus %>% filter(experimental_strategy == "RNA-Seq") %>% droplevels()
metaImmunePT_genus_WGS_HMS <- metaImmunePT_genus_WGS %>% filter(data_submitting_center_label == "Harvard Medical School") %>% droplevels()
metaImmunePT_genus_RNA_UNC <- metaImmunePT_genus_RNA %>% filter(data_submitting_center_label == "University of North Carolina") %>% droplevels()
# Write metadata to text file
metaImmunePT_genus %>% rownames_to_column("sampleid") %>%
write.table(file = "MMvec_analysis/genus_intersected_with_WIS/metadata_immune_all_primary_tumors.txt",
quote = FALSE, sep = "\t",row.names = FALSE, col.names = TRUE)
# Save biom files of full data
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus))
write_biom(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_bacteria_all_primary_tumors.biom")
rep200Data_Matched2ImmunePT_Fungi_genus_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Fungi_genus))
write_biom(rep200Data_Matched2ImmunePT_Fungi_genus_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_fungi_all_primary_tumors.biom")
mycobiomeImmuneCellsMergedPT_BIOM <- make_biom(t(mycobiomeImmuneCellsMergedPT))
write_biom(mycobiomeImmuneCellsMergedPT_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_cibersort_rel_abund_all_TCGA_primary_tumors.biom")
## Subset to HMS
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_HMS_PT <- rep200Data_Matched2ImmunePT_Bacteria_Filt_genus[rownames(metaImmunePT_genus_WGS_HMS),]
rep200Data_Matched2ImmunePT_Fungi_genus_HMS_PT <- rep200Data_Matched2ImmunePT_Fungi_genus[rownames(metaImmunePT_genus_WGS_HMS),]
metaImmunePT_genus_WGS_HMS %>% rownames_to_column("sampleid") %>%
write.table(file = "MMvec_analysis/genus_intersected_with_WIS/metadata_immune_WGS_Harvard_Primary_Tumor.txt",
quote = FALSE, sep = "\t",row.names = FALSE, col.names = TRUE)
# Save biom files of full data
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_HMS_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_HMS_PT))
write_biom(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_HMS_PT_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_bacteria_TCGA_Harvard_WGS_Primary_Tumor.biom")
rep200Data_Matched2ImmunePT_Fungi_genus_HMS_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Fungi_genus_HMS_PT))
write_biom(rep200Data_Matched2ImmunePT_Fungi_genus_HMS_PT_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_fungi_TCGA_Harvard_WGS_Primary_Tumor.biom")
mycobiomeImmuneCellsMergedPT_WGS_HMS_BIOM <- make_biom(t(mycobiomeImmuneCellsMergedPT_WGS_HMS))
write_biom(mycobiomeImmuneCellsMergedPT_WGS_HMS_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_cibersort_rel_abund_TCGA_Harvard_WGS_Primary_Tumor.biom")
## Subset to UNC
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_UNC_PT <- rep200Data_Matched2ImmunePT_Bacteria_Filt_genus[rownames(metaImmunePT_genus_RNA_UNC),]
rep200Data_Matched2ImmunePT_Fungi_genus_UNC_PT <- rep200Data_Matched2ImmunePT_Fungi_genus[rownames(metaImmunePT_genus_RNA_UNC),]
metaImmunePT_genus_RNA_UNC %>% rownames_to_column("sampleid") %>%
write.table(file = "MMvec_analysis/genus_intersected_with_WIS/metadata_immune_RNA_UNC_Primary_Tumor.txt",
quote = FALSE, sep = "\t",row.names = FALSE, col.names = TRUE)
# Save biom files of UNC data
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_UNC_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_UNC_PT))
write_biom(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_UNC_PT_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_bacteria_TCGA_UNC_RNA_Primary_Tumor.biom")
rep200Data_Matched2ImmunePT_Fungi_genus_UNC_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Fungi_genus_UNC_PT))
write_biom(rep200Data_Matched2ImmunePT_Fungi_genus_UNC_PT_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_fungi_TCGA_UNC_RNA_Primary_Tumor.biom")
mycobiomeImmuneCellsMergedPT_RNA_UNC_BIOM <- make_biom(t(mycobiomeImmuneCellsMergedPT_RNA_UNC))
write_biom(mycobiomeImmuneCellsMergedPT_RNA_UNC_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_cibersort_rel_abund_TCGA_UNC_RNA_Primary_Tumor.biom")
## Subset to all WGS
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_WGS_PT <- rep200Data_Matched2ImmunePT_Bacteria_Filt_genus[rownames(metaImmunePT_genus_WGS),]
rep200Data_Matched2ImmunePT_Fungi_genus_WGS_PT <- rep200Data_Matched2ImmunePT_Fungi_genus[rownames(metaImmunePT_genus_WGS),]
metaImmunePT_genus_WGS %>% rownames_to_column("sampleid") %>%
write.table(file = "MMvec_analysis/genus_intersected_with_WIS/metadata_immune_WGS_AllSeqCenters_Primary_Tumor.txt",
quote = FALSE, sep = "\t",row.names = FALSE, col.names = TRUE)
# Save biom files of WGS data
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_WGS_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_WGS_PT))
write_biom(rep200Data_Matched2ImmunePT_Bacteria_Filt_genus_WGS_PT_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_bacteria_TCGA_AllSeqCenters_WGS_Primary_Tumor.biom")
rep200Data_Matched2ImmunePT_Fungi_genus_WGS_PT_BIOM <- make_biom(t(rep200Data_Matched2ImmunePT_Fungi_genus_WGS_PT))
write_biom(rep200Data_Matched2ImmunePT_Fungi_genus_WGS_PT_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_rep200_counts_fungi_TCGA_AllSeqCenters_WGS_Primary_Tumor.biom")
mycobiomeImmuneCellsMergedPT_WGS_BIOM <- make_biom(t(mycobiomeImmuneCellsMergedPT_WGS))
write_biom(mycobiomeImmuneCellsMergedPT_WGS_BIOM, biom_file = "MMvec_analysis/genus_intersected_with_WIS/immune_cibersort_rel_abund_TCGA_AllSeqCenters_WGS_Primary_Tumor.biom")
rep200Data_Matched2ImmunePT_Bacteria_Filt_genus[1:3,1:3]
